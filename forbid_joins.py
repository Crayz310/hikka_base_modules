# ‚ñà ‚ñà ‚ñÄ ‚ñà‚ñÑ‚ñÄ ‚ñÑ‚ñÄ‚ñà ‚ñà‚ñÄ‚ñà ‚ñÄ    ‚ñÑ‚ñÄ‚ñà ‚ñÄ‚ñà‚ñÄ ‚ñÑ‚ñÄ‚ñà ‚ñà‚ñÄ‚ñÑ‚ñÄ‚ñà ‚ñÑ‚ñÄ‚ñà
# ‚ñà‚ñÄ‚ñà ‚ñà ‚ñà ‚ñà ‚ñà‚ñÄ‚ñà ‚ñà‚ñÄ‚ñÑ ‚ñà ‚ñÑ  ‚ñà‚ñÄ‚ñà  ‚ñà  ‚ñà‚ñÄ‚ñà ‚ñà ‚ñÄ ‚ñà ‚ñà‚ñÄ‚ñà
#
#              ¬© Copyright 2022
#
#          https://t.me/hikariatama
#
# üîí Licensed under the GNU GPLv3
# üåê https://www.gnu.org/licenses/agpl-3.0.html

# meta pic: https://img.icons8.com/fluency/344/no-hidden-fee.png
# meta developer: @hikarimods
# scope: hikka_min 1.2.6

import asyncio
from .. import loader


@loader.tds
class ForbidJoinMod(loader.Module):
    """Tired of trojans in modules, which join channels? Load this module!"""

    strings = {
        "name": "ForbidJoin",
        "welcome": (
            "‚öîÔ∏è <b>Unit ¬´LAMBDA¬ª will protect you from pesky </b><code>JoinChannelRequest</code>\n\n"
            "<b>All you need is to keep this module installed!</b>\n\n"
            "<i>If any developer tries to bypass this protection, he will be added to SCAM modules list.</i>\n\n"
            "‚ö†Ô∏è <b>Protection will be activated after you restart userbot!</b>"
        ),
    }

    strings_ru = {
        "welcome": (
            "‚öîÔ∏è <b>–Æ–Ω–∏—Ç ¬´LAMBDA¬ª –±—É–¥–µ—Ç –∑–∞—â–∏—â–∞—Ç—å —Ç–µ–±—è –æ—Ç –Ω–∞–¥–æ–µ–¥–ª–∏–≤—ã—Ö </b><code>JoinChannelRequest</code>\n\n"
            "<b>–í—Å–µ, —á—Ç–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è - –¥–µ—Ä–∂–∞—Ç—å —ç—Ç–æ—Ç –º–æ–¥—É–ª—å —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—ã–º!</b>\n\n"
            "<i>–ï—Å–ª–∏ –∫–∞–∫–æ–π-–ª–∏–±–æ —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –ø–æ–ø—ã—Ç–∞–µ—Ç—Å—è –æ–±–æ–π—Ç–∏ —ç—Ç—É –∑–∞—â–∏—Ç—É, –æ–Ω –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ø–∏—Å–æ–∫ SCAM –º–æ–¥—É–ª–µ–π.</i>\n\n"
            "‚ö†Ô∏è <b>–ó–∞—â–∏—Ç–∞ —Å—Ç–∞–Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∏!</b>"
        ),
    }

    async def on_unload(self):
        asyncio.ensure_future(
            self._client.inline_query("@hikkamods_bot", "#statunload:forbid_joins")
        )

    async def stats_task(self):
        await asyncio.sleep(60)
        await self._client.inline_query(
            "@hikkamods_bot",
            f"#statload:{','.join(list(set(self.allmodules._hikari_stats)))}",
        )
        delattr(self.allmodules, "_hikari_stats")
        delattr(self.allmodules, "_hikari_stats_task")

    async def client_ready(self, client, db):
        self._db = db
        self._client = client

        if not hasattr(self.allmodules, "_hikari_stats"):
            self.allmodules._hikari_stats = []

        self.allmodules._hikari_stats += ["forbid_joins"]

        if not hasattr(self.allmodules, "_hikari_stats_task"):
            self.allmodules._hikari_stats_task = asyncio.ensure_future(
                self.stats_task()
            )

    async def on_dlmod(self, client, db):
        await self.inline.bot.send_photo(
            client._tg_id,
            "https://github.com/hikariatama/assets/raw/master/unit_lambda.png",
            caption=self.strings("welcome"),
        )


# ‚ö†Ô∏è‚ö†Ô∏è  WARNING!  ‚ö†Ô∏è‚ö†Ô∏è
# If you are a module developer, and you'll try to bypass this protection to
# force user join your channel, you will be added to SCAM modules
# list and you will be banned from Hikka federation.
# Let USER decide, which channel he will follow. Do not be so petty
# I hope, you understood me.
# Thank you
